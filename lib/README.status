
                             === VLCJ Status ===

These bindings are for version 1.1.x of libvlc.

Bindings exist for the core player functionality, the media player, events,
logos and marquees.

Some of the bindings, particularly with regard to structures, may not (yet) be
complete. There may well be bugs in the JNA mappings. My intention is to keep
improving this but it's a big job to get 100% complete and correct bindings!

Full-screen support is now sort-of working - the libvlc full screen functions
are not used, instead it relies on graphicsDevice.setFullScreenWindow(w).

Multiple media player instances in the same application are supported.

Tests are executed on a quad core desktop machine with a reasonable graphics
card under Linux.

I have successfully played three DVD ISO images concurrently without any 
noticeable issues. Any more causes severe performance degradation.

I have successfully played five HD movies concurrently without any major 
issues (three seems optimal). Any more causes performance degradation.

When using multiple player instances you may be affected by a race condition
that can occur when executing media player play calls in quick succession 
causing fatal VM crashes due to native library failures.

You can mitigate this somewhat by staggering your play calls by a second or so.

There should be enough here to get a good media player working, have a look at
the TestPlayer class to help you get started.

A new feature is a simple fluent API to create properly formatted Media 
Resource Locators. These are not fully tested, I do not have access to all of
the media types (VCD, SSM, MMS etc) to do a comprehensive test.

I am happy to hear feed-back if there's something critical that the bindings
are not providing for you.

One significant difference is that there are now multiple methods available to
set the video surface - and this depends on the OS you are running under.

For this reason, you will need to determine which OS you are running on at
run-time and instantiate an appropriate player instance. A factory 
implementation is provided to encapsulate this for you.

Out of the box this works for Linux and Windows.

I can not test these bindings on a Windows or Mac environment, so either send
me patches if you get it working other environments, or just roll your own 
solution.

You will need to agree to assign me the copyright to your patch if you want it
included in the code-base.

Please refer to the project web-site for more up-to-date status information.